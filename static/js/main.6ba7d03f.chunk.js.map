{"version":3,"sources":["getFiltred.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SelectStatus","TodoList","props","todos","todoId","onSelectedTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","status","onStatusChange","query","onQueryChange","value","onChange","event","target","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","modalClose","useState","user","setUser","useEffect","userId","data","catch","err","Error","href","email","name","App","setTodos","setQuery","todoStatus","setTodoStatus","selectedTodo","setSelectedTodo","filtredTodos","useMemo","options","filter","toLowerCase","includes","getFiltred","useCallback","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ba7d03f.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\n\nexport enum SelectStatus {\n  Completed = 'completed',\n  All = 'all',\n  Active = 'active',\n}\n\ntype Filtred = {\n  query: string;\n  todoStatus: SelectStatus;\n};\n\nexport const getFiltred = (\n  todos: Todo[],\n  options: Filtred,\n) => {\n  const { todoStatus, query } = options;\n  let filtredTodos = [...todos];\n\n  if (todoStatus !== SelectStatus.All) {\n    filtredTodos = filtredTodos.filter(todo => {\n      switch (todoStatus) {\n        case SelectStatus.Completed:\n          return todo.completed;\n\n        case SelectStatus.Active:\n          return !todo.completed;\n\n        default:\n          return true;\n      }\n    });\n  }\n\n  if (query) {\n    filtredTodos = filtredTodos.filter(todo => {\n      return todo.title\n        .toLowerCase()\n        .includes(query.toLowerCase());\n    });\n  }\n\n  return filtredTodos;\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  todoId: number | null;\n  onSelectedTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const { todos, todoId, onSelectedTodo } = props;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => (\n          <tr key={todo.id} data-cy=\"todo\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye': todo.id !== todoId,\n                    'fa-eye-slash': todo.id === todoId,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { ChangeEvent } from 'react';\nimport { SelectStatus } from '../../getFiltred';\n\ntype Props = {\n  status: SelectStatus;\n  onStatusChange: (filter: SelectStatus) => void;\n\n  query: string;\n  onQueryChange: (newQuery: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = (props) => {\n  const {\n    status,\n    onStatusChange,\n    query,\n    onQueryChange,\n  } = props;\n\n  const changeFilter = (event: ChangeEvent<HTMLSelectElement>) => {\n    onStatusChange(event.target.value as SelectStatus);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={changeFilter}\n          >\n            <option value={SelectStatus.All}>All</option>\n            <option value={SelectStatus.Active}>Active</option>\n            <option value={SelectStatus.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onQueryChange(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onQueryChange('')}\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  modalClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = (props) => {\n  const { todo, modalClose } = props;\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(data => setUser(data))\n      .catch(err => {\n        throw new Error(err);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={modalClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {!todo.completed ? (\n                <strong className=\"has-text-danger\">Planned</strong>\n              ) : (\n                <strong className=\"has-text-success\">Done</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { SelectStatus, getFiltred } from './getFiltred';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [todoStatus, setTodoStatus] = useState<SelectStatus>(SelectStatus.All);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then(data => setTodos(data));\n  }, []);\n\n  const filtredTodos = useMemo(() => {\n    return getFiltred(todos, { todoStatus, query });\n  }, [todos, todoStatus, query]);\n\n  const modalClose = useCallback(() => {\n    setSelectedTodo(null);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQueryChange={setQuery}\n                status={todoStatus}\n                onStatusChange={setTodoStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length !== 0 ? (\n                <TodoList\n                  todos={filtredTodos}\n                  onSelectedTodo={setSelectedTodo}\n                  todoId={selectedTodo?.id || null}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          modalClose={modalClose}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}